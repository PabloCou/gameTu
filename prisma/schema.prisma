generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db" // URL de la base de datos en Turso
}

model User {
  id                    Int      @id @default(autoincrement())
  name                  String
  surname               String?
  email                 String   @unique
  password              String
  role                  String?
  course                String?
  active                Boolean  @default(true)
  accepNotifications   Boolean  @default(true)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  offers               Offer[]
  rates                Rate[]
  games                Game[]
}

model Offer {
  id            Int       @id @default(autoincrement())
  title         String
  description   String?
  active        Boolean  @default(true)
  contactEmail  String?
  location      String?
  published     DateTime @default(now())
  expired       DateTime

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  idCategory    Int?
  category      Category? @relation(fields: [idCategory], references: [id])

  idUserCreator Int
  userCreator   User @relation(fields: [idUserCreator], references: [id])

  rates         Rate[]
}

model Category {
  id            Int       @id @default(autoincrement())
  name          String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  offers        Offer[]
  games         Game[]
}

model Rate {
  idUser  Int
  idOffer Int
  value   Int

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user  User  @relation(fields: [idUser], references: [id])
  offer Offer @relation(fields: [idOffer], references: [id])

  @@id([idUser, idOffer])
}

model Game {
  id            Int      @id @default(autoincrement())
  title         String
  description   String?
  releaseDate   DateTime
  price         Float?
  active        Boolean  @default(true)

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  idCategory    Int?
  category      Category? @relation(fields: [idCategory], references: [id])

  idUserCreator Int
  userCreator   User      @relation(fields: [idUserCreator], references: [id])
}